# Paste here and save your klipper configuration
# This file contains pin mappings for the stock 2020 Creality Ender 3
# Pro with the 32-bit Creality 4.2.2 board. To use this config, during
# "make menuconfig" select the STM32F103 with a "28KiB bootloader" and
# serial (on USART1 PA10/PA9) communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.
# [include accelerometer.cfg] #comment this out if not using accelerometer
[include KAMP_Settings.cfg]
[include mainsail.cfg]

# Enable exclude_object for adaptive meshing
[exclude_object]

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
position_max: 245 #change to 220 for TEST_SPEED macro
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 0
position_max: 245 #change to 220 for TEST_SPEED macro
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
#endstop_pin: ^PA7
#position_endstop: 0.0
position_max: 245
endstop_pin: probe:z_virtual_endstop
position_min: -1 #-5 when changing crtouch physical height (ie spacer or adxl mount)

[extruder]
#rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / <requested_extrude_distance>
max_extrude_only_distance: 101.0 #100.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 32.272732 #33.6 #extruder esteps - through extruder only not hot end
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#pressure_advance = 0.7 #(pla)
#pressure_advance = <start> + <measured_height> * <factor>
#control: pid
# tuned for stock hardware with 200 degree Celsius target
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 285
# min_extrude_temp: 0 #enable only when calibrating extruder esteps
max_extrude_cross_section: 5 #needed to allow KAMP to purge

[heater_bed]
heater_pin: PC9 
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC3
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_33FFD5054746333822881457-if00 #original creality board = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 500 #torture test passed @500, was @300 before input shaping
max_accel: 6000 #torture test passed @6500 backing off to 6000 to be conservative was @3000 before input shaping
max_z_velocity: 5
max_z_accel: 100

# Pin mappings for BL_T port
[bltouch]
sensor_pin: ^PB1
control_pin: PB0
x_offset: -45
y_offset: -5
#z_offset: 0

[bed_screws]
screw1: 28, 35
screw2: 200, 35
screw3: 200, 207
screw4: 28, 207

[screws_tilt_adjust]
screw1: 73, 40
screw1_name: front left screw
screw2: 245, 40
screw2_name: front right screw
screw3: 245, 212
screw3_name: rear right screw
screw4: 73, 212
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M3

[bed_mesh]
speed: 120
horizontal_move_z: 6
mesh_min: 12, 25
mesh_max: 200, 220
# probe_count: 6, 6
probe_count: 10, 10
mesh_pps: 2, 2
algorithm: bicubic
bicubic_tension: 0.2

[gcode_macro G29]
gcode:
    #BED_MESH_CLEAR
    #BED_MESH_CALIBRATE
    #BED_MESH_PROFILE LOAD=default
    BED_MESH_PROFILE REMOVE=default #ensure default profile is removed
    BED_MESH_CLEAR
    BED_MESH_OUTPUT #should be empty
    BED_MESH_CALIBRATE PROFILE=comp 
    BED_MESH_PROFILE SAVE=comp 
    BED_MESH_PROFILE LOAD=comp
    BED_MESH_OUTPUT #should be using comp profile

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    
    # Preheat nozzle to 150 to prevent oozing during homing (set, don't wait)
    M104 S150
    # Heat bed for probing (set & wait)
    M190 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Home the printer
    G28
    # ABL (Comment out adaptive bed mesh in KAMP config)
    BED_MESH_CALIBRATE ADAPTIVE=1 ADAPTIVE_MARGIN=5
    # Smart Park
    Smart_Park
    # Set and wait for nozzle to reach printing temperature
    M109 S{EXTRUDER_TEMP}
    # KAMP Adaptive Purge
    LINE_PURGE
    # Start printing!

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Disable steppers
    M84
    
[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c $0"
timeout: 90.0
verbose: True

[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small patternbox
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

[display]
lcd_type: st7920
cs_pin: PB12
sclk_pin: PB13
sid_pin: PB15
encoder_pins: ^PB14, ^PB10
click_pin: ^!PB2

[safe_z_home]
home_xy_position: 113, 120 # Change coordinates to the center of your print bed
speed: 50
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.101
#*# pid_ki = 2.064
#*# pid_kd = 102.579
#*#
#*# [bltouch]
#*# z_offset = 2.780
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.102
#*# pid_ki = 1.732
#*# pid_kd = 689.290
#*#
#*# [bed_mesh comp]
#*# version = 1
#*# points =
#*# 	0.110000, 0.092500, 0.112500, 0.112500, 0.112500, 0.142500, 0.147500, 0.137500, 0.155000, 0.177500
#*# 	0.240000, 0.200000, 0.197500, 0.172500, 0.142500, 0.147500, 0.132500, 0.097500, 0.085000, 0.090000
#*# 	0.092500, 0.065000, 0.072500, 0.050000, 0.035000, 0.057500, 0.052500, 0.025000, 0.025000, 0.037500
#*# 	0.015000, -0.002500, 0.012500, 0.005000, -0.002500, 0.027500, 0.032500, 0.020000, 0.030000, 0.060000
#*# 	0.100000, 0.060000, 0.047500, 0.015000, -0.027500, -0.025000, -0.040000, -0.075000, -0.087500, -0.090000
#*# 	0.032500, -0.007500, -0.017500, -0.045000, -0.075000, -0.072500, -0.077500, -0.110000, -0.117500, -0.110000
#*# 	-0.037500, -0.055000, -0.045000, -0.057500, -0.067500, -0.050000, -0.037500, -0.047500, -0.032500, -0.007500
#*# 	-0.005000, -0.055000, -0.072500, -0.115000, -0.150000, -0.157500, -0.177500, -0.210000, -0.225000, -0.225000
#*# 	-0.017500, -0.062500, -0.085000, -0.132500, -0.170000, -0.182500, -0.205000, -0.240000, -0.260000, -0.262500
#*# 	-0.037500, -0.065000, -0.067500, -0.090000, -0.107500, -0.092500, -0.092500, -0.112500, -0.107500, -0.082500
#*# tension = 0.2
#*# min_x = 12.0
#*# algo = bicubic
#*# y_count = 10
#*# mesh_y_pps = 2
#*# min_y = 25.0
#*# x_count = 10
#*# max_y = 219.94
#*# mesh_x_pps = 2
#*# max_x = 199.92
#*#
#*# [input_shaper]
#*# shaper_type_y = ei
#*# shaper_freq_y = 43.6
#*# shaper_type_x = mzv
#*# shaper_freq_x = 89.4
